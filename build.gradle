buildscript {
    ext.corda_release_version = '3.2-corda'
    ext.corda_release_group = 'net.corda'
    ext.corda_gradle_plugins_version = '3.0.9'
    ext.kotlin_version = '1.1.60'
    ext.junit_version = '4.12'
    ext.quasar_version = '0.7.9'
    ext.jolokia_version = '1.3.7'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }
}


repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
}

apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'


sourceSets {
    main {
        resources {
            srcDir "../config/dev"
        }
    }
}

// Function to compile the J2V8 dependency
def j2v8_dependency(architecture) {
    // Mapping for each different architecture given
    def archs = [
             win32:'com.eclipsesource.j2v8:j2v8_win32_x86_64:4.6.0',
             linux:'com.eclipsesource.j2v8:j2v8_linux_x86_64:4.8.0',
             macos:'com.eclipsesource.j2v8:j2v8_macosx_x86_64:4.6.0',
    ]

    if (!(architecture in archs))
        throw new GradleScriptException("$os operating system not supported.", null)

    def j2v8_dep = archs.get(architecture)

    println("Built with $j2v8_dep")

    return j2v8_dep
}

import static org.apache.tools.ant.taskdefs.condition.Os.*

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"

    // Corda integration dependencies

    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
    cordaCompile "$corda_release_group:corda-rpc:$corda_release_version"
    cordaCompile "$corda_release_group:corda-node-api:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"

//    cordaCompile "$corda_release_group:corda-webserver-impl:$corda_release_version"
//    cordaRuntime "$corda_release_group:corda-webserver:$corda_release_version"
//    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"

    // Checking the current os
    if (project.hasProperty('os')) {
        compile j2v8_dependency(os)
    } else {
        if (isFamily(FAMILY_WINDOWS)) {
            compile j2v8_dependency('win32')
        } else if (isFamily(FAMILY_MAC)) {
            compile j2v8_dependency('macos')
        } else {
            compile j2v8_dependency('linux')
        }
    }

    // Cordapp dependencies
    compile "org.apache.commons:commons-lang3:3.0"
    compile "commons-codec:commons-codec:1.9"
}

jar {
    baseName 'oraclize-corda-api'
    version project.property('version')
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.1"
        apiVersion = "1.1"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}




